<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>AES Dual Chat ‚Äì Lavender & Pink UI</title>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/crypto-js/4.1.1/crypto-js.min.js"></script>
  <style>
    body {
      margin: 0;
      font-family: "Poppins", sans-serif;
      background: linear-gradient(135deg, #EECDA3, #EF629F, #D6A4A4, #DAE2F8);
      color: #fff;
      display: flex;
      flex-direction: column;
      align-items: center;
      min-height: 100vh;
    }

    h1 {
      margin: 20px 0;
      font-size: 2rem;
      background: linear-gradient(90deg, #ff9a9e, #fad0c4, #fbc2eb, #a18cd1);
      -webkit-background-clip: text;
      -webkit-text-fill-color: transparent;
      text-shadow: 0 0 20px rgba(255, 182, 193, 0.6);
    }

    .chat-container {
      display: flex;
      gap: 20px;
      width: 95%;
      max-width: 1200px;
      margin: 20px auto;
    }

    .chat-box {
      flex: 1;
      backdrop-filter: blur(15px);
      background: rgba(255, 255, 255, 0.12);
      border: 1px solid rgba(255, 255, 255, 0.25);
      border-radius: 20px;
      display: flex;
      flex-direction: column;
      padding: 15px;
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
      transition: transform 0.2s ease;
    }

    .chat-box:hover {
      transform: translateY(-5px);
    }

    .chat-header {
      font-weight: 600;
      font-size: 1.2rem;
      margin-bottom: 10px;
      text-align: center;
      color: #ffb6c1;
    }

    .messages {
      flex: 1;
      overflow-y: auto;
      padding: 10px;
      border-radius: 12px;
      display: flex;
      flex-direction: column;
      gap: 10px;
      background: rgba(255, 255, 255, 0.08);
    }

    .message {
      max-width: 75%;
      padding: 10px 14px;
      border-radius: 14px;
      animation: fadeIn 0.3s ease;
      word-wrap: break-word;
    }

    .sent {
      align-self: flex-end;
      background: linear-gradient(90deg, #ff9a9e, #fad0c4);
      color: #fff;
    }

    .received {
      align-self: flex-start;
      background: linear-gradient(90deg, #a18cd1, #fbc2eb);
      color: #fff;
    }

    .input-area {
      display: flex;
      margin-top: 12px;
      gap: 10px;
    }

    .input-area input {
      flex: 1;
      padding: 12px;
      border-radius: 12px;
      border: none;
      background: rgba(255, 255, 255, 0.15);
      color: #fff;
      font-size: 1rem;
      outline: none;
    }

    .input-area button {
      padding: 12px 20px;
      border: none;
      border-radius: 12px;
      background: linear-gradient(90deg, #ff9a9e, #fbc2eb);
      color: #fff;
      font-weight: 600;
      cursor: pointer;
      transition: 0.3s;
    }

    .input-area button:hover {
      background: linear-gradient(90deg, #fbc2eb, #ff9a9e);
      transform: scale(1.05);
    }

    .process-log {
      width: 95%;
      max-width: 1200px;
      margin: 25px auto;
      padding: 15px;
      border-radius: 15px;
      backdrop-filter: blur(10px);
      background: rgba(255, 255, 255, 0.12);
      border: 1px solid rgba(255, 255, 255, 0.25);
      box-shadow: 0 8px 25px rgba(0, 0, 0, 0.25);
      max-height: 250px;
      overflow-y: auto;
    }

    .log-entry {
      padding: 8px;
      margin-bottom: 6px;
      border-left: 4px solid #ff9a9e;
      background: rgba(255, 255, 255, 0.08);
      border-radius: 6px;
      font-size: 0.95rem;
      animation: fadeInUp 0.3s ease;
    }

    @keyframes fadeIn {
      from {opacity: 0; transform: translateY(5px);}
      to {opacity: 1; transform: translateY(0);}
    }

    @keyframes fadeInUp {
      from {opacity: 0; transform: translateY(10px);}
      to {opacity: 1; transform: translateY(0);}
    }
  </style>
</head>
<body>
  <h1>AES Encrypted Chat</h1>
  <div class="chat-container">
    <div class="chat-box" id="user1-box">
      <div class="chat-header">User 1</div>
      <div class="messages" id="messages1"></div>
      <div class="input-area">
        <input type="text" id="input1" placeholder="Type a message...">
        <button onclick="sendMessage(1)">Send</button>
      </div>
    </div>
    <div class="chat-box" id="user2-box">
      <div class="chat-header">User 2</div>
      <div class="messages" id="messages2"></div>
      <div class="input-area">
        <input type="text" id="input2" placeholder="Type a message...">
        <button onclick="sendMessage(2)">Send</button>
      </div>
    </div>
  </div>
  <div class="process-log" id="process-log">
    <h3>üîê Encryption Process</h3>
  </div>

  <script>
    const secretKey = "superSecretKey123";

    function sendMessage(user) {
      const input = document.getElementById(`input${user}`);
      const message = input.value.trim();
      if (!message) return;

      const encrypted = CryptoJS.AES.encrypt(message, secretKey).toString();
      const decrypted = CryptoJS.AES.decrypt(encrypted, secretKey).toString(CryptoJS.enc.Utf8);

      const senderBox = document.getElementById(`messages${user}`);
      const receiverBox = document.getElementById(`messages${user === 1 ? 2 : 1}`);

      const sentMsg = document.createElement("div");
      sentMsg.className = "message sent";
      sentMsg.textContent = message;
      senderBox.appendChild(sentMsg);

      const recvMsg = document.createElement("div");
      recvMsg.className = "message received";
      recvMsg.textContent = decrypted;
      receiverBox.appendChild(recvMsg);

      senderBox.scrollTop = senderBox.scrollHeight;
      receiverBox.scrollTop = receiverBox.scrollHeight;

      const log = document.getElementById("process-log");
      const entry = document.createElement("div");
      entry.className = "log-entry";
      entry.innerHTML = `<b>User ${user}:</b> "${message}" <br>
        Encrypted: <code>${encrypted}</code><br>
        Decrypted: "${decrypted}"`;
      log.appendChild(entry);
      log.scrollTop = log.scrollHeight;

      input.value = "";
    }
  </script>
</body>
</html>
